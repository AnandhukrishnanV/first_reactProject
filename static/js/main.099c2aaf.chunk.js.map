{"version":3,"sources":["Component/TodoApp/EditPopup.js","Component/TodoApp/TodoApp.js","Component/Header/Header.js","Component/About/About.js","App.js","serviceWorker.js","index.js"],"names":["EditPopup","state","editInput","handlChange","event","setState","target","value","className","onSubmit","e","props","data","editItem","key","type","this","placeholder","onChange","Component","TodoApp","input","items","showPopup","showPopups","storeItems","preventDefault","hideAllPopuls","console","log","deleteItem","filter","index","val","itemsCopy","map","onClick","bind","Header","to","About","style","color","textAlign","textDecoration","href","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.099c2aaf.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./EditPopup.css\"\r\n\r\nexport default class EditPopup extends Component {\r\n\r\n\r\n    state={\r\n        editInput:\"\"\r\n    }\r\n\r\n    \r\n    handlChange=(event)=>{\r\n        this.setState({\r\n            editInput :  event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"EditPopup\" onSubmit={(e)=>this.props.data.editItem(e,this.props.data.key,this.state.editInput)}>\r\n                <input type=\"text\" value={this.editInput} placeholder=\"Enter New Value...\" onChange={this.handlChange}></input>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./TodoApp.css\"\r\nimport EditPopup from './EditPopup';\r\n\r\nexport default class TodoApp extends Component {\r\n\r\n\r\n    state={\r\n        input:\"\",\r\n        items:[],\r\n        showPopup:false,\r\n        showPopups:[]\r\n    }\r\n\r\n\r\n    handlChange=(event)=>{\r\n        this.setState({\r\n            input :  event.target.value\r\n        });\r\n    }\r\n\r\n    storeItems=(event)=>{\r\n        event.preventDefault();\r\n        this.hideAllPopuls()\r\n\r\n        // const temp=this.state.items\r\n        // temp.push(this.state.input)\r\n\r\n        if(this.state.input!==\"\"){ //We only need to add if user enters a non empty string\r\n\r\n            this.setState({\r\n                // items:temp\r\n                items:[...this.state.items,this.state.input],\r\n                input:\"\"\r\n            },()=>{\r\n                console.log(this.state.items)\r\n            });\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    deleteItem=(key)=>{\r\n\r\n        \r\n        this.setState({\r\n            items:this.state.items.filter((data,index)=>{\r\n                return index!==key\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    editItem=(event,key,val)=>{\r\n\r\n        event.preventDefault();\r\n\r\n        console.log(\"Key and value is \" )\r\n        console.log(key)\r\n        console.log(val)\r\n\r\n        var itemsCopy=[...this.state.items];\r\n        itemsCopy[key]=val\r\n\r\n        this.setState({\r\n            items:itemsCopy\r\n        })\r\n\r\n        this.hideAllPopuls();\r\n        \r\n    }\r\n\r\n\r\n    hideAllPopuls=()=>{\r\n        var itemsCopy=[...this.state.showPopups];\r\n        console.log(itemsCopy);\r\n        itemsCopy.map((data,index)=>(\r\n            \r\n            itemsCopy[index]=false\r\n        ));\r\n        console.log(itemsCopy);\r\n        this.setState({\r\n            showPopups:itemsCopy\r\n        })\r\n\r\n    }\r\n\r\n\r\n    showPopup=(index)=>{\r\n        this.hideAllPopuls();\r\n        var itemsCopy=[...this.state.showPopups];\r\n        itemsCopy[index]=true\r\n        this.setState({\r\n            showPopup:true,\r\n            showPopups:itemsCopy\r\n        })\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n        const {input}=this.state;\r\n\r\n        return (\r\n            <div className=\"todo-container\">\r\n                <form className=\"input-section\" onSubmit={this.storeItems}>\r\n                    <h1>TodoApp</h1>\r\n                    <input type=\"text\" value={this.state.input} onClick={this.hideAllPopuls} onChange={this.handlChange} placeholder=\"Enter Items...\"/>\r\n                </form>\r\n                <ul>\r\n                        {this.state.items.map((data,index)=>(\r\n                            <li key={index}>\r\n                                {data}\r\n                                <div className=\"itemButtons\">\r\n                                    <i className=\"fas fa-edit\" onClick={()=>this.showPopup(index)}></i>\r\n                                    <i className=\"fas fa-trash-alt\" onClick={()=>this.deleteItem(index)}></i>\r\n                                </div>\r\n                                {this.state.showPopups[index] && <EditPopup data={{editItem:this.editItem.bind(this),key:index}}/>}\r\n                            </li>\r\n                        ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n//Since inital value os input is empty it displays the placeholder value","import React from 'react';\r\nimport \"./Header.css\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Header() {\r\n    return (\r\n\r\n        <header>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n\r\n    const style={color:\"white\",textAlign:\"center\",textDecoration:\"none\"};\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1 style={style}>About</h1>\r\n            <h2 style={style}>React JS Practice Project</h2>\r\n            <h3 style={style}><a style={style} href=\"https://youtu.be/DaweP1MTOgs\">Click here for tutorial</a></h3>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport TodoApp from './Component/TodoApp/TodoApp';\nimport Header from './Component/Header/Header';\nimport About from './Component/About/About';\nimport {BrowserRouter as Router,Route} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <Router>\n\n      <Header/>\n      <Route path=\"/\" exact component={TodoApp}/>\n      <Route path=\"/about\" component={About}/>\n    </Router>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}